# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      myinput:
        type: boolean
        description: 'my input'
        required: true
        default: true
      force_release:
        description: "Release Artifact"
        required: false
        default: false
        type: boolean
        
env:
  DO_PUBLISH: ${{ github.ref == 'refs/heads/main' && ( (github.event_name == 'workflow_dispatch' && github.event.inputs.myinput == 'true' ) || github.event_name == 'push' ) }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo ${{ github.event_name  }}
          echo ${{ github.event.inputs.myinput  }}
          echo ${{ github.ref  }}
          echo ${{ env.DO_PUBLISH }}
      
      # Runs a single command using the runners shell
      - if: ${{ env.DO_PUBLISH == 'true' }}
        name: Run a one-line script
        run: echo Hello, world!

      - name: Release
        id: create_release
        if: github.ref == 'refs/heads/main' || github.event.inputs.force_release == 'true'
        run: |
          echo "test" > test.txt
          gh release create -p v1.2.3 --target ${{ github.ref }} 'test.txt#My display label'

